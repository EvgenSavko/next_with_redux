{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\hello-next\\\\pages\\\\p\\\\[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { useRouter } from 'next/router';\nimport Markdown from 'react-markdown';\nimport { connect } from 'react-redux';\nimport Layout from '../../components/MyLayout.js';\n\nvar Article = function Article(props) {\n  var router = useRouter();\n  var count = props.count;\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"jsx-2647703310\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, router.query.id), React.createElement(\"h3\", {\n    className: \"jsx-2647703310\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Count from redux: \", count), React.createElement(\"div\", {\n    className: \"jsx-2647703310\" + \" \" + \"markdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Markdown, {\n    source: \"\\nThis is our blog post.\\nYes. We can have a [link](/).\\nAnd we can have a title as well.\\n\\n### This is a title\\n\\nAnd here's the content.\\n      \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(_JSXStyle, {\n    id: \"2647703310\",\n    __self: this\n  }, \".markdown{font-family:'Arial';}.markdown a{-webkit-text-decoration:none;text-decoration:none;color:blue;}.markdown a:hover{opacity:0.6;}.markdown h3{margin:0;padding:0;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5cXERlc2t0b3BcXGhlbGxvLW5leHRcXHBhZ2VzXFxwXFxbaWRdLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBCeUIsQUFHK0IsQUFJQyxBQUtULEFBSUgsU0FDQyxHQUpaLE9BSzJCLENBZDNCLHdCQWVBLE1BWGEsV0FDYiIsImZpbGUiOiJDOlxcVXNlcnNcXEFkbWluXFxEZXNrdG9wXFxoZWxsby1uZXh0XFxwYWdlc1xccFxcW2lkXS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gJ25leHQvcm91dGVyJ1xyXG5pbXBvcnQgTWFya2Rvd24gZnJvbSAncmVhY3QtbWFya2Rvd24nXHJcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCdcclxuaW1wb3J0IExheW91dCBmcm9tICcuLi8uLi9jb21wb25lbnRzL015TGF5b3V0LmpzJ1xyXG5cclxuY29uc3QgQXJ0aWNsZSA9IHByb3BzID0+IHtcclxuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKVxyXG4gIGNvbnN0IHsgY291bnQgfSA9IHByb3BzXHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8TGF5b3V0PlxyXG4gICAgICA8aDE+e3JvdXRlci5xdWVyeS5pZH08L2gxPlxyXG4gICAgICA8aDM+Q291bnQgZnJvbSByZWR1eDoge2NvdW50fTwvaDM+XHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFya2Rvd25cIj5cclxuICAgICAgICA8TWFya2Rvd25cclxuICAgICAgICAgIHNvdXJjZT17YFxyXG5UaGlzIGlzIG91ciBibG9nIHBvc3QuXHJcblllcy4gV2UgY2FuIGhhdmUgYSBbbGlua10oLykuXHJcbkFuZCB3ZSBjYW4gaGF2ZSBhIHRpdGxlIGFzIHdlbGwuXHJcblxyXG4jIyMgVGhpcyBpcyBhIHRpdGxlXHJcblxyXG5BbmQgaGVyZSdzIHRoZSBjb250ZW50LlxyXG4gICAgICBgfVxyXG4gICAgICAgIC8+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICA8c3R5bGUganN4IGdsb2JhbD57YFxyXG4gICAgICAgIC5tYXJrZG93biB7XHJcbiAgICAgICAgICBmb250LWZhbWlseTogJ0FyaWFsJztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5tYXJrZG93biBhIHtcclxuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgIGNvbG9yOiBibHVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLm1hcmtkb3duIGE6aG92ZXIge1xyXG4gICAgICAgICAgb3BhY2l0eTogMC42O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLm1hcmtkb3duIGgzIHtcclxuICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIH1cclxuICAgICAgYH08L3N0eWxlPlxyXG4gICAgPC9MYXlvdXQ+XHJcbiAgKVxyXG59XHJcblxyXG5mdW5jdGlvbiBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUpIHtcclxuICBjb25zdCB7IGZvbywgY291bnQgfSA9IHN0YXRlXHJcbiAgcmV0dXJuIHsgZm9vLCBjb3VudCB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoXHJcbiAgbWFwU3RhdGVUb1Byb3BzLFxyXG4gIG51bGxcclxuKShBcnRpY2xlKVxyXG5cclxuLy8gaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XHJcbi8vIGltcG9ydCBMYXlvdXQgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9NeUxheW91dC5qcyc7XHJcblxyXG4vLyBjb25zdCBQb3N0ID0gcHJvcHMgPT4gKFxyXG4vLyAgIDxMYXlvdXQ+XHJcbi8vICAgICA8aDE+e3Byb3BzLnNob3cubmFtZX08L2gxPlxyXG4vLyAgICAgPHA+e3Byb3BzLnNob3cuc3VtbWFyeS5yZXBsYWNlKC88Wy9dP3A+L2csICcnKX08L3A+XHJcbi8vICAgICA8aW1nIHNyYz17cHJvcHMuc2hvdy5pbWFnZS5tZWRpdW19IC8+XHJcbi8vICAgPC9MYXlvdXQ+XHJcbi8vICk7XHJcblxyXG4vLyBQb3N0LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKGNvbnRleHQpIHtcclxuLy8gICBjb25zdCB7IGlkIH0gPSBjb250ZXh0LnF1ZXJ5O1xyXG4vLyAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS50dm1hemUuY29tL3Nob3dzLyR7aWR9YCk7XHJcbi8vICAgY29uc3Qgc2hvdyA9IGF3YWl0IHJlcy5qc29uKCk7XHJcblxyXG4vLyAgIGNvbnNvbGUubG9nKGBGZXRjaGVkIHNob3c6ICR7c2hvdy5uYW1lfWApO1xyXG5cclxuLy8gICByZXR1cm4geyBzaG93IH07XHJcbi8vIH07XHJcblxyXG4vLyBleHBvcnQgZGVmYXVsdCBQb3N0O1xyXG5cclxuLy8gaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInO1xyXG4vLyBpbXBvcnQgTGF5b3V0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvTXlMYXlvdXQuanMnO1xyXG5cclxuLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9zdCgpIHtcclxuLy8gICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcclxuXHJcbi8vICAgcmV0dXJuIChcclxuLy8gICAgIDxMYXlvdXQ+XHJcbi8vICAgICAgIDxoMT57cm91dGVyLnF1ZXJ5LmlkfTwvaDE+XHJcbi8vICAgICAgIDxwPlRoaXMgaXMgdGhlIGJsb2cgcG9zdCBjb250ZW50LjwvcD5cclxuLy8gICAgIDwvTGF5b3V0PlxyXG4vLyAgICk7XHJcbi8vIH1cclxuXHJcbi8vIHBvc3QuanNcclxuLy8gaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInO1xyXG4vLyBpbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTXlMYXlvdXQuanMnO1xyXG5cclxuLy8gY29uc3QgUGFnZSA9ICgpID0+IHtcclxuLy8gICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcclxuXHJcbi8vICAgcmV0dXJuIChcclxuLy8gICAgIDxMYXlvdXQ+XHJcbi8vICAgICAgIDxoMT57cm91dGVyLnF1ZXJ5LnRpdGxlfTwvaDE+XHJcbi8vICAgICAgIDxwPlRoaXMgaXMgdGhlIGJsb2cgcG9zdCBjb250ZW50LjwvcD5cclxuLy8gICAgIDwvTGF5b3V0PlxyXG4vLyAgICk7XHJcbi8vIH07XHJcblxyXG4vLyBleHBvcnQgZGVmYXVsdCBQYWdlO1xyXG4iXX0= */\\n/*@ sourceURL=C:\\\\Users\\\\Admin\\\\Desktop\\\\hello-next\\\\pages\\\\p\\\\[id].js */\"));\n};\n\nfunction mapStateToProps(state) {\n  var foo = state.foo,\n      count = state.count;\n  return {\n    foo: foo,\n    count: count\n  };\n}\n\nexport default connect(mapStateToProps, null)(Article); // import fetch from 'isomorphic-unfetch';\n// import Layout from '../../components/MyLayout.js';\n// const Post = props => (\n//   <Layout>\n//     <h1>{props.show.name}</h1>\n//     <p>{props.show.summary.replace(/<[/]?p>/g, '')}</p>\n//     <img src={props.show.image.medium} />\n//   </Layout>\n// );\n// Post.getInitialProps = async function(context) {\n//   const { id } = context.query;\n//   const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n//   const show = await res.json();\n//   console.log(`Fetched show: ${show.name}`);\n//   return { show };\n// };\n// export default Post;\n// import { useRouter } from 'next/router';\n// import Layout from '../../components/MyLayout.js';\n// export default function Post() {\n//   const router = useRouter();\n//   return (\n//     <Layout>\n//       <h1>{router.query.id}</h1>\n//       <p>This is the blog post content.</p>\n//     </Layout>\n//   );\n// }\n// post.js\n// import { useRouter } from 'next/router';\n// import Layout from '../components/MyLayout.js';\n// const Page = () => {\n//   const router = useRouter();\n//   return (\n//     <Layout>\n//       <h1>{router.query.title}</h1>\n//       <p>This is the blog post content.</p>\n//     </Layout>\n//   );\n// };\n// export default Page;","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\hello-next\\pages\\p\\[id].js"],"names":["useRouter","Markdown","connect","Layout","Article","props","router","count","query","id","mapStateToProps","state","foo"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACvB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AADuB,MAEfO,KAFe,GAELF,KAFK,CAEfE,KAFe;AAIvB,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,MAAM,CAACE,KAAP,CAAaC,EAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBF,KAAvB,CAFF,EAGE;AAAA,wCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,MAAM,uJADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF;AAAA;AAAA;AAAA,+tIADF;AAuCD,CA3CD;;AA6CA,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAAA,MACtBC,GADsB,GACPD,KADO,CACtBC,GADsB;AAAA,MACjBL,KADiB,GACPI,KADO,CACjBJ,KADiB;AAE9B,SAAO;AAAEK,IAAAA,GAAG,EAAHA,GAAF;AAAOL,IAAAA,KAAK,EAALA;AAAP,GAAP;AACD;;AAED,eAAeL,OAAO,CACpBQ,eADoB,EAEpB,IAFoB,CAAP,CAGbN,OAHa,CAAf,C,CAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { useRouter } from 'next/router'\r\nimport Markdown from 'react-markdown'\r\nimport { connect } from 'react-redux'\r\nimport Layout from '../../components/MyLayout.js'\r\n\r\nconst Article = props => {\r\n  const router = useRouter()\r\n  const { count } = props\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>{router.query.id}</h1>\r\n      <h3>Count from redux: {count}</h3>\r\n      <div className=\"markdown\">\r\n        <Markdown\r\n          source={`\r\nThis is our blog post.\r\nYes. We can have a [link](/).\r\nAnd we can have a title as well.\r\n\r\n### This is a title\r\n\r\nAnd here's the content.\r\n      `}\r\n        />\r\n      </div>\r\n      <style jsx global>{`\r\n        .markdown {\r\n          font-family: 'Arial';\r\n        }\r\n\r\n        .markdown a {\r\n          text-decoration: none;\r\n          color: blue;\r\n        }\r\n\r\n        .markdown a:hover {\r\n          opacity: 0.6;\r\n        }\r\n\r\n        .markdown h3 {\r\n          margin: 0;\r\n          padding: 0;\r\n          text-transform: uppercase;\r\n        }\r\n      `}</style>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { foo, count } = state\r\n  return { foo, count }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Article)\r\n\r\n// import fetch from 'isomorphic-unfetch';\r\n// import Layout from '../../components/MyLayout.js';\r\n\r\n// const Post = props => (\r\n//   <Layout>\r\n//     <h1>{props.show.name}</h1>\r\n//     <p>{props.show.summary.replace(/<[/]?p>/g, '')}</p>\r\n//     <img src={props.show.image.medium} />\r\n//   </Layout>\r\n// );\r\n\r\n// Post.getInitialProps = async function(context) {\r\n//   const { id } = context.query;\r\n//   const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\r\n//   const show = await res.json();\r\n\r\n//   console.log(`Fetched show: ${show.name}`);\r\n\r\n//   return { show };\r\n// };\r\n\r\n// export default Post;\r\n\r\n// import { useRouter } from 'next/router';\r\n// import Layout from '../../components/MyLayout.js';\r\n\r\n// export default function Post() {\r\n//   const router = useRouter();\r\n\r\n//   return (\r\n//     <Layout>\r\n//       <h1>{router.query.id}</h1>\r\n//       <p>This is the blog post content.</p>\r\n//     </Layout>\r\n//   );\r\n// }\r\n\r\n// post.js\r\n// import { useRouter } from 'next/router';\r\n// import Layout from '../components/MyLayout.js';\r\n\r\n// const Page = () => {\r\n//   const router = useRouter();\r\n\r\n//   return (\r\n//     <Layout>\r\n//       <h1>{router.query.title}</h1>\r\n//       <p>This is the blog post content.</p>\r\n//     </Layout>\r\n//   );\r\n// };\r\n\r\n// export default Page;\r\n"]},"metadata":{},"sourceType":"module"}